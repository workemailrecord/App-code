<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>Settings</title>
    <link
      rel="stylesheet"
      href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,400i,700&display=fallback"
    />
    <link rel="stylesheet" href="/plugins/fontawesome-free/css/all.min.css" />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"
    />
    <link rel="stylesheet" href="/dist/css/adminlte.min.css" />
    <link rel="stylesheet" href="/css/admin.css" />
    <link
      href="//cdn.jsdelivr.net/npm/@sweetalert2/theme-dark@4/dark.css"
      rel="stylesheet"
    />
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC"
      crossorigin="anonymous"
    />
    <script
      src="https://cdnjs.cloudflare.com/ajax/libs/axios/1.6.7/axios.min.js"
      integrity="sha512-NQfB/bDaB8kaSXF8E77JjhHG5PM6XVRxvHzkZiwl3ddWCEPBa23T76MuWSwAJdMGJnmQqM0VeY9kFszsrBEFrQ=="
      crossorigin="anonymous"
      referrerpolicy="no-referrer"
    ></script>
    <style>
      .form-group {
        margin-top: 20px;
        padding: 20px;
        border-radius: 5px;
        box-shadow: 0 0 5px #2ecc71;
      }

      .form-group button {
        margin-top: 30px;
      }
    </style>
  </head>

  <body class="hold-transition sidebar-mini">
    <div class="wrapper">
      <%- include('nav') %>
      <div class="content-wrapper">
        <section class="content-header">
          <div class="container-fluid">
            <div class="row mb-2">
              <div class="col-sm-6">
                <h1>Settings</h1>
              </div>
            </div>
          </div>
          <!-- /.container-fluid -->
        </section>

        <div class="container-fluid">
          <div class="row">
            <div class="col-md-12">
              <div style="padding: 10px 20px; margin-bottom: 200px">
                <div class="form-group">
                  <div class="text-center">
                    <label for="quantity"
                      >Increase | Decrease For Members</label
                    >
                  </div>
                  <div class="row">
                    <div class="col-md-4">
                      <input
                        type="text"
                        class="form-control"
                        oninput="value=value.replace(/\D/g,'')"
                        id="buff-id"
                        placeholder="Enter account ID"
                      />
                    </div>
                    <div class="col-md-4">
                      <select
                        class="form-select mb-4"
                        id="buff-acc"
                        aria-label="Default select example"
                      >
                        <option selected value="">
                          ----------- Select Function ----------
                        </option>
                        <option value="1">Increase (+)</option>
                        <option value="2">Decrease (-)</option>
                      </select>
                    </div>
                    <div class="col-md-4">
                      <input
                        type="text"
                        class="form-control"
                        oninput="value=value.replace(/\D/g,'')"
                        id="buff-money"
                        placeholder="Enter Amount"
                      />
                    </div>
                  </div>
                  <button
                    type="submit"
                    class="btn btn-primary mt-3"
                    id="buff-username"
                    style="width: 100%"
                  >
                    Submit
                  </button>
                </div>

                <div class="form-group">
                  <div class="text-center">
                    <label for="quantity">Manual Settings</label>
                  </div>
                  <div class="row">
                    <div class="col-md-3">
                      <label for="edit-momo-name_bank" style="color: #3498db"
                        >Rate</label
                      >
                      <input
                        type="text"
                        class="form-control"
                        placeholder="Rate"
                        id="edit-momo-name_bank"
                        value=""
                      />
                    </div>
                    <div class="col-md-3">
                      <input
                        type="text"
                        class="form-control"
                        placeholder="Wallet Owner Name"
                        id="edit-momo-name"
                        value=""
                      />
                    </div>
                    <div class="col-md-3">
                      <input
                        type="text"
                        class="form-control"
                        placeholder="UPI ID"
                        id="edit-momo-info"
                        value=""
                      />
                    </div>
                    <div class="col-md-3">
                      <input
                        type="text"
                        class="form-control"
                        placeholder="USDT Wallet Address"
                        id="edit-momo-qr"
                        value=""
                      />
                    </div>
                  </div>
                  <button
                    type="submit"
                    class="btn btn-primary mt-3 edit-momo"
                    style="width: 100%"
                    id="submit-button" 
                  >
                    Submit
                  </button>
                </div>

                <div class="form-group">
                  <div class="text-center">
                    <label for="telegram">Telegram</label>
                  </div>
                  <div class="row">
                    <div class="col-md-4">
                      <label for="telegram" style="color: #3498db"
                        >Telegram</label
                      >
                      <input
                        type="text"
                        class="form-control"
                        id="telegram"
                        placeholder="Enter Telegram Link"
                        value=""
                      />
                    </div>
                    <div class="col-md-4">
                      <label for="cskh" style="color: #3498db"
                        >Online Services</label
                      >
                      <input
                        type="text"
                        class="form-control"
                        id="cskh"
                        placeholder="Online Services"
                        value=""
                      />
                    </div>
                    <div class="col-md-4">
                      <label for="myapp_web" style="color: #3498db"
                        >App Download Link</label
                      >
                      <input
                        type="text"
                        class="form-control"
                        id="myapp_web"
                        placeholder="Enter App Link"
                        value=""
                      />
                    </div>
                  </div>
                  <button
                    type="submit"
                    class="btn btn-primary mt-3 telegram"
                    style="width: 100%"
                  >
                    Submit
                  </button>
                </div>

                <div class="form-group">
                  <div class="text-center">
                    <label for="image">Upload QR</label>
                  </div>
                  <input
                    type="file"
                    class="form-control"
                    id="image"
                    accept="image/*"
                  />
                  <button
                    type="submit"
                    class="btn btn-primary upload-image"
                    style="width: 100%"
                    onclick="uploadImage(event)"
                  >
                    Upload
                  </button>
                </div>

                <div id="image-display" class="text-center">
                  <h3>Uploaded QR:</h3>
                  <img
                    id="uploaded-image"
                    src="/uploads/uploaded-image.jpg"
                    alt="No Image Uploaded"
                    style="max-width: 300px"
                  />
                </div>

                <h2>Upload Images</h2>
                <form id="uploadForm">
                  <div class="row">
                    <div class="col-md-3">
                      <label for="image1">Website logo green</label>
                      <input
                        type="file"
                        id="image1"
                        name="image1"
                        class="form-control"
                      />
                    </div>
                    <div class="col-md-3">
                      <label for="image2">Website white logo</label>
                      <input
                        type="file"
                        id="image2"
                        name="image2"
                        class="form-control"
                      />
                    </div>
                    <div class="col-md-3">
                      <label for="image3">Main page banner </label>
                      <input
                        type="file"
                        id="image3"
                        name="image3"
                        class="form-control"
                      />
                    </div>
                    <div class="col-md-3">
                      <label for="image4">Home banner 1</label>
                      <input
                        type="file"
                        id="image4"
                        name="image4"
                        class="form-control"
                      />
                    </div>
                    <div class="col-md-3">
                      <label for="image5">Home banner 2</label>
                      <input
                        type="file"
                        id="image5"
                        name="image5"
                        class="form-control"
                      />
                    </div>
                    <div class="col-md-3">
                      <label for="image6">Home banner 3</label>
                      <input
                        type="file"
                        id="image6"
                        name="image6"
                        class="form-control"
                      />
                    </div>
                    <div class="col-md-3">
                      <label for="image7">Home banner 4</label>
                      <input
                        type="file"
                        id="image7"
                        name="image7"
                        class="form-control"
                      />
                    </div>
                    <div class="col-md-3">
                      <label for="image8">Home banner 5</label>
                      <input
                        type="file"
                        id="image8"
                        name="image8"
                        class="form-control"
                      />
                    </div>
                  </div>
                  <button type="submit" class="btn btn-primary mt-3">
                    Upload
                  </button>
                </form>
<br>       

                <form id="uploadForm2">
                    <input type="file" id="imageInput2" name="image" accept="image/*" required>
                    <button type="submit">Upload Image</button>
                  </form>
                <div id="message"></div>
                <label for="popupToggle">Show Popup:</label>
<div class="form-check form-switch">
  <input class="form-check-input" type="checkbox" id="popupToggle" onchange="togglePopupSetting(this.checked)">
</div>
              </div>
              

            </div>
          </div>
        </div>
      </div>
    </div>
    <script src="/plugins/jquery/jquery.min.js"></script>
    <script src="/plugins/bootstrap/js/bootstrap.bundle.min.js"></script>
    <script src="/dist/js/adminlte.min.js"></script>
    <script src="/js/admin/admin.js"></script>
    <script src="//cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.js"></script>
    <!-- <script>
      $.ajax({
        type: "POST",
        url: "/admin/manager/settings/get",
        data: "data",
        dataType: "json",
        success: function (response) {
          let bank = response.datas[0];
          let momo = response.momo;
          $("#edit-momo-name_bank").val(momo.bank_name);
          $("#edit-momo-name").val(momo.username);
          $("#edit-momo-info").val(momo.upi_id);
          $("#edit-momo-qr").val(momo.usdt_wallet_address);

          $("#edit-banking-name_bank").val(bank.name_bank);
          $("#edit-banking-name").val(bank.name_user);
          $("#edit-banking-info").val(bank.stk);
          // $('#edit-momo-qr').val(momo.qr_code_image);

          $("#telegram").val(response.settings[0].telegram);
          $("#cskh").val(response.settings[0].cskh);
          $("#myapp_web").val(response.settings[0].app);
        },
      });
    </script> -->
    <script>
        // Adding event listener to the submit button
        $("#submit-button").click(function (e) {
          e.preventDefault(); // Prevent form submission if inside a form
      
          // Check if any of the input fields are empty
          let rate = $("#edit-momo-name_bank").val();
          let walletOwnerName = $("#edit-momo-name").val();
          let upiId = $("#edit-momo-info").val();
          let walletAddress = $("#edit-momo-qr").val();
      
          if (!rate || !walletOwnerName || !upiId || !walletAddress) {
            // Show error alert if any field is empty
            Swal.fire({
                  icon: "error",
                  title: "All fields are required !",
                });          return; // Exit the function if fields are empty
          }
      
          // Proceed with AJAX request if all fields are filled
          $.ajax({
            type: "POST",
            url: "/admin/manager/settings/get",
            data: "data",
            dataType: "json",
            success: function (response) {
              let bank = response.datas[0];
              let momo = response.momo;
              $("#edit-momo-name_bank").val(momo.bank_name);
              $("#edit-momo-name").val(momo.username);
              $("#edit-momo-info").val(momo.upi_id);
              $("#edit-momo-qr").val(momo.usdt_wallet_address);
      
              $("#edit-banking-name_bank").val(bank.name_bank);
              $("#edit-banking-name").val(bank.name_user);
              $("#edit-banking-info").val(bank.stk);
              // $('#edit-momo-qr').val(momo.qr_code_image);
      
              $("#telegram").val(response.settings[0].telegram);
              $("#cskh").val(response.settings[0].cskh);
              $("#myapp_web").val(response.settings[0].app);
      
              // Show success alert
              Swal.fire("Good job!", "You clicked the button!", "success");
            }
          });
        });
      </script>
    <script>
      function sendRequest(params1, params2, typer) {
        $.ajax({
          type: "POST",
          url: "/manage/admin/settings",
          data: {
            params1: params1,
            params2: params2,
            typer: typer,
          },
          dataType: "json",
          success: function (response) {
            if (response.message == 1) {
              Swal.fire("Good job!", "You clicked the button!", "success");
            } else if (response.message == 2) {
              Swal.fire({
                icon: "error",
                title: "Phone number does not exist",
              });
            } else {
              Swal.fire({
                icon: "error",
                title: "An unknown error !",
              });
            }
          },
        });
      }

      function sendRequestBank(
        name_bank = "",
        name = "",
        info = "",
        qr = "",
        typer = "",
      ) {
        $.ajax({
          type: "POST",
          url: "/admin/manager/settings/bank",
          data: {
            name_bank: name_bank,
            name: name,
            info: info,
            qr: qr,
            typer: typer,
          },
          dataType: "json",
          success: function (response) {
            Swal.fire("Good job!", "Updated Successfully!", "success");
          },
        });
      }
      $(".buff-money").click(function (e) {
        e.preventDefault();
        const phone = $("#buff-phone").val();
        const money = $("#buff-money").val();
        const checkMoney = $.isNumeric(money);
        if (phone && checkMoney) {
          sendRequest(phone, money, "buff");
        } else {
          Swal.fire({
            icon: "error",
            title: "Empty or Wrong Details",
          });
        }
      });

      const alertMessage = (text) => {
        const msg = document.createElement("div");
        msg.setAttribute("data-v-1dcba851", "");
        msg.className = "msg";

        const msgContent = document.createElement("div");
        msgContent.setAttribute("data-v-1dcba851", "");
        msgContent.className = "msg-content v-enter-active v-enter-to";
        msgContent.style = "";
        msgContent.textContent = text;

        msg.appendChild(msgContent);
        document.body.appendChild(msg);

        setTimeout(() => {
          msgContent.classList.remove("v-enter-active", "v-enter-to");
          msgContent.classList.add("v-leave-active", "v-leave-to");

          setTimeout(() => {
            document.body.removeChild(msg);
          }, 100);
        }, 1000);
      };

      $(".edit-momo").click(async (e) => {
        try {
          e.preventDefault();
          const bank_name = $("#edit-momo-name_bank").val();
          const username = $("#edit-momo-name").val();
          const upi_id = $("#edit-momo-info").val();
          const usdt_wallet_address = $("#edit-momo-qr").val();

          const response = await axios.post("/admin/manager/settings/bank", {
            bank_name,
            username,
            upi_id,
            usdt_wallet_address,
            typer: "momo",
          });

          if (response?.data?.status === true) {
            alertMessage(response?.data?.message);
          }
        } catch (error) {
          console.log(error);
        }
      });
      $(".edit-banking").click(function (e) {
        e.preventDefault();
        const name_bank = $("#edit-banking-name_bank").val();
        const name = $("#edit-banking-name").val();
        const info = $("#edit-banking-info").val();
        sendRequestBank(name_bank, name, info, "bank");
      });
      $(".telegram").click(function (e) {
        e.preventDefault();
        const telegram = $("#telegram").val();
        const cskh = $("#cskh").val();
        const myapp_web = $("#myapp_web").val();
        $.ajax({
          type: "POST",
          url: "/admin/manager/settings/cskh",
          data: {
            telegram: telegram,
            cskh: cskh,
            myapp_web: myapp_web,
          },
          dataType: "json",
          success: function (response) {
            if (response.status == true) {
              Swal.fire(
                "Good job!",
                "Your Links Updated Successfully!",
                "success",
              );
            } else {
              Swal.fire({
                icon: "error",
                title: "Empty or Wrong",
              });
            }
          },
        });
      });

      $("#buff-username").click(function (e) {
        e.preventDefault();
        let id_user = $("#buff-id").val().trim();
        let buff_acc = $("#buff-acc").val().trim();
        let money_value = $("#buff-money").val().trim();
        if (id_user && buff_acc && money_value) {
          $.ajax({
            type: "POST",
            url: "/admin/manager/settings/buff",
            data: {
              id_user: id_user,
              buff_acc: buff_acc,
              money_value: money_value,
            },
            dataType: "json",
            success: function (response) {
              if (response.status == true) {
                Swal.fire("Good job!", "Data Added Successfully!", "success");
              } else {
                Swal.fire({
                  icon: "error",
                  title: "User ID does not exist",
                });
              }
            },
          });
        } else {
          Swal.fire({
            icon: "error",
            title: "Please enter complete information",
          });
        }
      });

      document
        .getElementById("uploadForm")
        .addEventListener("submit", async function (event) {
          event.preventDefault();

          const formData = new FormData();
          for (let i = 1; i <= 8; i++) {
            const fileInput = document.getElementById(`image${i}`);
            if (fileInput.files.length > 0) {
              formData.append(`image${i}`, fileInput.files[0]);
            }
          }

          try {
            const response = await fetch("/upload-images", {
              method: "POST",
              body: formData,
            });

            const result = await response.json();
            document.getElementById("message").innerText = result.message;
          } catch (error) {
            console.error("Error uploading images:", error);
            document.getElementById("message").innerText =
              "Error uploading images";
          }
        });
    </script>

<script>
    function uploadImage(event) {
      event.preventDefault();
  
      const fileInput = document.getElementById("image");
      const file = fileInput.files[0];
  
      if (!file) {
        alert("Please select an image.");
        return;
      }
  
      // Check file type
      const validMimeType = "image/jpeg";
      const validExtension = ".jpg";
  
      if (file.type !== validMimeType || !file.name.toLowerCase().endsWith(validExtension)) {
        alert("Only JPG images are allowed.");
        return;
      }
  
      const formData = new FormData();
      formData.append("image", file);
  
      fetch("/admin/manager/settings/upload-image", {
        method: "POST",
        body: formData,
      })
        .then((response) => response.json())
        .then((data) => {
          if (data.success) {
            document.getElementById("uploaded-image").src = "/public/uploads/uploaded-image.jpg";
            alert("Image uploaded successfully!");
          } else {
            alert("Error uploading image.");
          }
        })
        .catch((error) => {
          console.error("Error:", error);
          alert("An error occurred while uploading the image.");
        });
    }


    document.getElementById('uploadForm2').addEventListener('submit', async (event) => {
        event.preventDefault();
      
        const imageInput = document.getElementById('imageInput2');
        const file = imageInput.files[0];
      
        if (!file) {
          document.getElementById('message').textContent = 'Please select an image to upload.';
          return;
        }
      
        const formData = new FormData();
        formData.append('image', file);
      
        try {
          const response = await fetch('/change-specific-image', {
            method: 'POST',
            body: formData,
          });
      
          const result = await response.json();
      
          if (response.ok) {
            document.getElementById('message').textContent = result.message;
          } else {
            document.getElementById('message').textContent = `Error: ${result.message}`;
          }
        } catch (error) {
          console.error('Error:', error);
          document.getElementById('message').textContent = 'An error occurred while uploading the image.';
        }
      });
  </script>

<script>
  async function togglePopupSetting(isChecked) {
      try {
          const response = await fetch('/api/admin/updatePopupSetting', {
              method: 'POST',
              headers: {
                  'Content-Type': 'application/json'
              },
              body: JSON.stringify({ showPopup: isChecked })
          });

          if (!response.ok) {
              throw new Error('Failed to update popup setting');
          }

          const result = await response.json();
          if (result.success) {
              console.log('Popup setting updated successfully');
          } else {
              console.error('Error:', result.error);
          }
      } catch (error) {
          console.error('Error updating popup setting:', error);
      }
  }

  // Initialize the toggle button state based on the current setting
  async function initializeToggleButton() {
      try {
          const response = await fetch('/api/admin/getPopupSetting');
          if (!response.ok) {
              throw new Error('Failed to fetch popup setting');
          }
          const data = await response.json();
          document.getElementById('popupToggle').checked = data.showPopup;
      } catch (error) {
          console.error('Error fetching popup setting:', error);
      }
  }

  // Call the initialization function when the page loads
  window.onload = initializeToggleButton;
</script>
  </body>
</html>
